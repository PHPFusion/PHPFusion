(function(a){if(typeof exports=="object"&&typeof module=="object"){a(require("../../lib/codemirror"))}else{if(typeof define=="function"&&define.amd){define(["../../lib/codemirror"],a)}else{a(CodeMirror)}}})(function(a){a.defineMode("dylan",function(o){var n={unnamedDefinition:["interface"],namedDefinition:["module","library","macro","C-struct","C-union","C-function","C-callable-wrapper"],typeParameterizedDefinition:["class","C-subtype","C-mapped-subtype"],otherParameterizedDefinition:["method","function","C-variable","C-address"],constantSimpleDefinition:["constant"],variableSimpleDefinition:["variable"],otherSimpleDefinition:["generic","domain","C-pointer-type","table"],statement:["if","block","begin","method","case","for","select","when","unless","until","while","iterate","profiling","dynamic-bind"],separator:["finally","exception","cleanup","else","elseif","afterwards"],other:["above","below","by","from","handler","in","instance","let","local","otherwise","slot","subclass","then","to","keyed-by","virtual"],signalingCalls:["signal","error","cerror","break","check-type","abort"]};n.otherDefinition=n.unnamedDefinition.concat(n.namedDefinition).concat(n.otherParameterizedDefinition);n.definition=n.typeParameterizedDefinition.concat(n.otherDefinition);n.parameterizedDefinition=n.typeParameterizedDefinition.concat(n.otherParameterizedDefinition);n.simpleDefinition=n.constantSimpleDefinition.concat(n.variableSimpleDefinition).concat(n.otherSimpleDefinition);n.keyword=n.statement.concat(n.separator).concat(n.other);var q="[-_a-zA-Z?!*@<>$%]+";var f=new RegExp("^"+q);var d={symbolKeyword:q+":",symbolClass:"<"+q+">",symbolGlobal:"\\*"+q+"\\*",symbolConstant:"\\$"+q};var l={symbolKeyword:"atom",symbolClass:"tag",symbolGlobal:"variable-2",symbolConstant:"variable-3"};for(var k in d){if(d.hasOwnProperty(k)){d[k]=new RegExp("^"+d[k])}}d.keyword=[/^with(?:out)?-[-_a-zA-Z?!*@<>$%]+/];var r={};r.keyword="keyword";r.definition="def";r.simpleDefinition="def";r.signalingCalls="builtin";var c={};var j={};["keyword","definition","simpleDefinition","signalingCalls"].forEach(function(s){n[s].forEach(function(t){c[t]=s;j[t]=r[s]})});function b(u,t,s){t.tokenize=s;return s(u,t)}var m,i;function h(t,u,s){m=t;i=s;return u}function e(w,v){var t=w.peek();if(t=="'"||t=='"'){w.next();return b(w,v,p(t,"string","string"))}else{if(t=="/"){w.next();if(w.eat("*")){return b(w,v,g)}else{if(w.eat("/")){w.skipToEnd();return h("comment","comment")}else{w.skipTo(" ");return h("operator","operator")}}}else{if(/\d/.test(t)){w.match(/^\d*(?:\.\d*)?(?:e[+\-]?\d+)?/);return h("number","number")}else{if(t=="#"){w.next();t=w.peek();if(t=='"'){w.next();return b(w,v,p('"',"symbol","string-2"))}else{if(t=="b"){w.next();w.eatWhile(/[01]/);return h("number","number")}else{if(t=="x"){w.next();w.eatWhile(/[\da-f]/i);return h("number","number")}else{if(t=="o"){w.next();w.eatWhile(/[0-7]/);return h("number","number")}else{w.eatWhile(/[-a-zA-Z]/);return h("hash","keyword")}}}}}else{if(w.match("end")){return h("end","keyword")}}}}}for(var s in d){if(d.hasOwnProperty(s)){var u=d[s];if((u instanceof Array&&u.some(function(x){return w.match(x)}))||w.match(u)){return h(s,l[s],w.current())}}}if(w.match("define")){return h("definition","def")}else{w.eatWhile(/[\w\-]/);if(c[w.current()]){return h(c[w.current()],j[w.current()],w.current())}else{if(w.current().match(f)){return h("variable","variable")}else{w.next();return h("other","variable-2")}}}}function g(v,u){var s=false,t;while((t=v.next())){if(t=="/"&&s){u.tokenize=e;break}s=(t=="*")}return h("comment","comment")}function p(s,u,t){return function(y,x){var w,v=false;while((w=y.next())!=null){if(w==s){v=true;break}}if(v){x.tokenize=e}return h(u,t)}}return{startState:function(){return{tokenize:e,currentIndent:0}},token:function(u,t){if(u.eatSpace()){return null}var s=t.tokenize(u,t);return s},blockCommentStart:"/*",blockCommentEnd:"*/"}});a.defineMIME("text/x-dylan","dylan")});