!function(){var m={version:"1.6.20",mesh:function(s){return p(s,l.apply(this,arguments))},meshArcs:l,merge:function(s){return p(s,n.apply(this,arguments))},mergeArcs:n,feature:r,neighbors:k,presimplify:d};function a(z,s){var t={},u={},v={},w=[],A=-1;s.forEach(function(E,B){var D=z.arcs[E<0?~E:E],C;if(D.length<3&&!D[1][0]&&!D[1][1]){C=s[++A],s[A]=E,s[B]=C}});s.forEach(function(E){var H=x(E),I=H[0],C=H[1],G,F;if(G=v[I]){delete v[G.end];G.push(E);G.end=C;if(F=u[C]){delete u[F.start];var B=F===G?G:G.concat(F);u[B.start=G.start]=v[B.end=F.end]=B}else{u[G.start]=v[G.end]=G}}else{if(G=u[C]){delete u[G.start];G.unshift(E);G.start=I;if(F=v[I]){delete v[F.end];var D=F===G?G:F.concat(G);u[D.start=F.start]=v[D.end=G.end]=D}else{u[G.start]=v[G.end]=G}}else{G=[E];u[G.start=I]=v[G.end=C]=G}}});function x(C){var B=z.arcs[C<0?~C:C],E=B[0],D;if(z.transform){D=[0,0],B.forEach(function(F){D[0]+=F[0],D[1]+=F[1]})}else{D=B[B.length-1]}return C<0?[D,E]:[E,D]}function y(C,E){for(var B in C){var D=C[B];delete E[D.start];delete D.start;delete D.end;D.forEach(function(F){t[F<0?~F:F]=1});w.push(D)}}y(v,u);y(u,v);s.forEach(function(B){if(!t[B<0?~B:B]){w.push([B])}});return w}function l(D,v,t){var s=[];if(arguments.length>1){var y=[],A;function u(G){var F=G<0?~G:G;(y[F]||(y[F]=[])).push({i:G,g:A})}function E(F){F.forEach(u)}function B(F){F.forEach(E)}function z(F){if(F.type==="GeometryCollection"){F.geometries.forEach(z)}else{if(F.type in C){A=F,C[F.type](F.arcs)}}}var C={LineString:E,MultiLineString:B,Polygon:B,MultiPolygon:function(F){F.forEach(B)}};z(v);y.forEach(arguments.length<3?function(F){s.push(F[0].i)}:function(F){if(t(F[0].g,F[F.length-1].g)){s.push(F[0].i)}})}else{for(var x=0,w=D.arcs.length;x<w;++x){s.push(x)}}return{type:"MultiLineString",arcs:a(D,s)}}function n(y,x){var v={},s=[],u=[];x.forEach(function(z){if(z.type==="Polygon"){t(z.arcs)}else{if(z.type==="MultiPolygon"){z.arcs.forEach(t)}}});function t(z){z.forEach(function(A){A.forEach(function(B){(v[B=B<0?~B:B]||(v[B]=[])).push(z)})});s.push(z)}function w(z){return j(p(y,{type:"Polygon",arcs:[z]}).coordinates[0])>0}s.forEach(function(B){if(!B._){var z=[],A=[B];B._=1;u.push(z);while(B=A.pop()){z.push(B);B.forEach(function(C){C.forEach(function(D){v[D<0?~D:D].forEach(function(E){if(!E._){E._=1;A.push(E)}})})})}}});s.forEach(function(z){delete z._});return{type:"MultiPolygon",arcs:u.map(function(z){var C=[],E;z.forEach(function(F){F.forEach(function(G){G.forEach(function(H){if(v[H<0?~H:H].length<2){C.push(H)}})})});C=a(y,C);if((E=C.length)>1){var D=w(z[0][0]);for(var B=0,A;B<E;++B){if(D===w(C[B])){A=C[0],C[0]=C[B],C[B]=A;break}}}return C})}}function r(t,s){return s.type==="GeometryCollection"?{type:"FeatureCollection",features:s.geometries.map(function(u){return g(t,u)})}:g(t,s)}function g(u,t){var s={type:"Feature",id:t.id,properties:t.properties||{},geometry:p(u,t)};if(t.id==null){delete s.id}return s}function p(B,u){var y=c(B.transform),s=B.arcs;function t(F,G){if(G.length){G.pop()}for(var D=s[F<0?~F:F],E=0,I=D.length,H;E<I;++E){G.push(H=D[E].slice());y(H,E)}if(F<0){i(G,I)}}function z(D){D=D.slice();y(D,0);return D}function C(F){var E=[];for(var D=0,G=F.length;D<G;++D){t(F[D],E)}if(E.length<2){E.push(E[0].slice())}return E}function v(E){var D=C(E);while(D.length<4){D.push(D[0].slice())}return D}function x(D){return D.map(v)}function w(E){var D=E.type;return D==="GeometryCollection"?{type:D,geometries:E.geometries.map(w)}:D in A?{type:D,coordinates:A[D](E)}:null}var A={Point:function(D){return z(D.coordinates)},MultiPoint:function(D){return D.coordinates.map(z)},LineString:function(D){return C(D.arcs)},MultiLineString:function(D){return D.arcs.map(C)},Polygon:function(D){return x(D.arcs)},MultiPolygon:function(D){return D.arcs.map(x)}};return w(u)}function i(x,w){var v,s=x.length,u=s-w;while(u<--s){v=x[u],x[u++]=x[s],x[s]=v}}function o(t,s){var w=0,v=t.length;while(w<v){var u=w+v>>>1;if(t[u]<s){w=u+1}else{v=u}}return w}function k(E){var u={},F=E.map(function(){return[]});function G(I,H){I.forEach(function(J){if(J<0){J=~J}var K=u[J];if(K){K.push(H)}else{u[J]=[H]}})}function A(I,H){I.forEach(function(J){G(J,H)})}function z(I,H){if(I.type==="GeometryCollection"){I.geometries.forEach(function(J){z(J,H)})}else{if(I.type in D){D[I.type](I.arcs,H)}}}var D={LineString:G,MultiLineString:A,Polygon:A,MultiPolygon:function(I,H){I.forEach(function(J){A(J,H)})}};E.forEach(z);for(var x in u){for(var y=u[x],t=y.length,w=0;w<t;++w){for(var v=w+1;v<t;++v){var C=y[w],B=y[v],s;if((s=F[C])[x=o(s,B)]!==B){s.splice(x,0,B)}if((s=F[B])[x=o(s,C)]!==C){s.splice(x,0,C)}}}}return F}function d(x,s){var w=c(x.transform),u=b(x.transform),t=h();if(!s){s=f}x.arcs.forEach(function(z){var B=[],G=0,E;for(var C=0,A=z.length,y;C<A;++C){y=z[C];w(z[C]=[y[0],y[1],Infinity],C)}for(var C=1,A=z.length-1;C<A;++C){E=z.slice(C-1,C+2);E[1][2]=s(E);B.push(E);t.push(E)}for(var C=0,A=B.length;C<A;++C){E=B[C];E.previous=B[C-1];E.next=B[C+1]}while(E=t.pop()){var F=E.previous,D=E.next;if(E[1][2]<G){E[1][2]=G}else{G=E[1][2]}if(F){F.next=D;F[2]=E[2];v(F)}if(D){D.previous=F;D[0]=E[0];v(D)}}z.forEach(u)});function v(y){t.remove(y);y[1][2]=s(y);t.push(y)}return x}function j(u){var v=-1,x=u.length,t,s=u[x-1],w=0;while(++v<x){t=s;s=u[v];w+=t[0]*s[1]-t[1]*s[0]}return w/2}function f(u){var t=u[0],s=u[1],v=u[2];return Math.abs((t[0]-v[0])*(s[1]-t[1])-(t[0]-s[0])*(v[1]-t[1]))}function q(t,s){return t[1][2]-s[1][2]}function h(){var t={},w=[],u=0;t.push=function(x){s(w[x._=u]=x,u++);return u};t.pop=function(){if(u<=0){return}var y=w[0],x;if(--u>0){x=w[u],v(w[x._=0]=x,0)}return y};t.remove=function(z){var y=z._,x;if(w[y]!==z){return}if(y!==--u){x=w[u],(q(x,z)<0?s:v)(w[x._=y]=x,y)}return y};function s(y,z){while(z>0){var x=((z+1)>>1)-1,A=w[x];if(q(y,A)>=0){break}w[A._=z]=A;w[y._=z=x]=y}}function v(z,A){while(true){var B=(A+1)<<1,x=B-1,y=A,C=w[y];if(x<u&&q(w[x],C)<0){C=w[y=x]}if(B<u&&q(w[B],C)<0){C=w[y=B]}if(y===A){break}w[C._=A]=C;w[z._=A=y]=z}}return t}function c(u){if(!u){return e}var w,y,x=u.scale[0],v=u.scale[1],t=u.translate[0],s=u.translate[1];return function(z,A){if(!A){w=y=0}z[0]=(w+=z[0])*x+t;z[1]=(y+=z[1])*v+s}}function b(u){if(!u){return e}var w,y,x=u.scale[0],v=u.scale[1],t=u.translate[0],s=u.translate[1];return function(z,B){if(!B){w=y=0}var A=(z[0]-t)/x|0,C=(z[1]-s)/v|0;z[0]=A-w;z[1]=C-y;w=A;y=C}}function e(){}if(typeof define==="function"&&define.amd){define(m)}else{if(typeof module==="object"&&module.exports){module.exports=m}else{this.topojson=m}}}();